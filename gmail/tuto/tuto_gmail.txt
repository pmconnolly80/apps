
Installation
============

Ne pas oublier d'installer angular-route.js
bower install angular-route


ARTICLE: Créer les routes avec ngRoute
======================================

J'ai placé le contrôleur sur le parent "deux colonnes" pour simplifier.


ARTICLE: Créer les routes avec ui-router
========================================

- Installer ui-router (comme ngRoute)

Remarques sur mon code :

- Utilisation d'un "abstract state" pour préfixer avec la même URL tous les états d'une même section.

Comme dit la doc : An abstract state can have child states but can not get activated itself. An 'abstract' state is simply a state that can't be transitioned to. It is activated implicitly when one of its descendants are activated. Some examples of how you might use an abstract state are: To prepend a url to all child state urls. To insert a template with its own ui-view(s) that its child states will populate. Or, c'est exactement ce qu'on veut faire



Routing Questions
=================

- Pourquoi est-ce que dans 02_ngroute2.html si je place le contrôleur sur <body> et que donc le contrôleur n'est pas réinstancié à chaque changement de route, la réactualisation des templates ne marche pas ? De plus, il arrive que $route.routes ne soit pas défini.



Auth
====

On crée un service AuthService avec ces caractéristiques :
- Emet un event global pour signaler l'issue de l'authentification au reste de l'application


Remarques diverses :

- Notez la façon dont on charge le JS SDK Google pour pouvoir détecter le "onload"

- Affichage des messages d'info en réaction à des événements : il faut utiliser scope.$apply!

  scope.$on(AUTH_EVENTS.loginSuccess, showInfo);

  function showAlert(message, cssClass) {
    scope.$apply(function() {
      scope.message = message;
      scope.class   = cssClass;
      scope.visible = true;
    });
  }

- Uses https://github.com/auth0/angular-storage to store the current user (instead of "Session")
